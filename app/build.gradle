plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    signingConfigs {
        debug {
            storeFile file('/Users/mac/Library/Mobile Documents/com~apple~CloudDocs/KEYSTORE/levetot/MacBookPro')
            storePassword 'MacBookPro'
            keyPassword 'MacBookPro'
            keyAlias 'aw'
        }
        release {
            storeFile file('/Users/mac/Library/Mobile Documents/com~apple~CloudDocs/KEYSTORE/levetot/MacBookPro')
            storePassword 'MacBookPro'
            keyAlias 'aw'
            keyPassword 'MacBookPro'
        }
    }
    compileSdk 34

    defaultConfig {
        applicationId "com.aw.forcement"
        minSdk 26
        targetSdk 34
        versionCode 30
        versionName "30"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "entity"
    productFlavors {
        homabay {
            manifestPlaceholders = [ launchActivityName:"com.example.MainActivity"]
            dimension "entity"
            applicationIdSuffix ""
            versionNameSuffix ""
            resValue "string", "app_name", "Homabay Revenue Collector"
            resValue "string", "base_api_url", "http://api.smarttest.zukutv.co.zm:92/"
            resValue "string", "country_code", "+254"
            buildConfigField "String", 'version_code', '"1.1"'

        }
        elgeyo {
            dimension "entity"
            applicationIdSuffix ".elgeyo"
            versionNameSuffix "-elgeyo"
            resValue "string", "app_name", "Elgeyo Revenue Collector"
            resValue "string", "base_api_url", "http://api.smarttest.zukutv.co.zm:92/"
            buildConfigField "String", 'version_code', '"1.1"'

        }
    }
    android.variantFilter {
        variant ->
            if (variant.buildType.name == 'release' &&
                    (variant.getFlavors().get(0).name.contains('Dev'))) {
                variant.setIgnore(true)
            }
            if (variant.buildType.name == 'debug' &&
                    (variant.getFlavors().get(0).name.contains('Prod'))) {
                variant.setIgnore(true)
            }
            if (variant.buildType.name == 'release' &&
                    (variant.getFlavors().get(0).name.contains('demo'))) {
                variant.setIgnore(true)
            }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    buildscript {
        repositories {
            google()
            mavenCentral()
        }
    }
    namespace 'com.aw.forcement'
}



dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    implementation("com.github.kittinunf.fuel:fuel:2.3.1")
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.android.gms:play-services-base:18.2.0'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-auth:20.6.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:18.0.1'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.toptoche.searchablespinner:searchablespinnerlibrary:1.3.1'
    implementation 'com.dinuscxj:circleprogressbar:1.3.6'
    implementation 'com.google.android.gms:play-services-tasks:18.0.2'


    //Add android.enableJetifier=true to gradle.properties
    def printooth = '1.3.1'
    implementation "com.github.mazenrashed:Printooth:$printooth"
    implementation 'com.github.kenglxn.QRGen:android:2.6.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'com.github.beksomega:loopinglayout:0.5.0'


    // This dependency is downloaded from the Googleâ€™s Maven repository.
    // So, make sure you also include that repository in your project's build.gradle file.
    implementation("com.google.android.play:app-update:2.1.0")
    // For Kotlin users also import the Kotlin extensions library for Play In-App Update:
    implementation("com.google.android.play:app-update-ktx:2.1.0")
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'

    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"



}


///Users/nouveta/Desktop/keystore/MacBookPro
//MacBookPro
//keytool -exportcert -alias aw -keystore MacBookPro.jks | xxd -p | tr -d "[:space:]" | echo -n com.aw.forcement `cat` | sha256sum | tr -d "[:space:]-" | xxd -r -p | base64 | cut -c1-11

//keytool -exportcert -alias aw -keystore MacBookPro.jks | xxd -p | tr -d "[:space:]" | echo -n  com.aw.forcement `cat` | sha256sum | tr -d "[:space:]-" | xxd -r -p | base64 | cut -c1-11

// ./sms_retriever_hash_v9.sh --package "com.aw.forcement" --keystore /path/to/your.keystore

